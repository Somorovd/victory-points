datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               String           @id @default(cuid())
  username         String
  friends          User[]           @relation("Friends")
  friendsRelation  User[]           @relation("Friends")
  incomingRequests FriendRequests[] @relation("IncomingRequests")
  outgoingRequests FriendRequests[] @relation("OutgoingRequests")
  hostedLobbies    Lobby[]          @relation("HostedLobbies")
  joinedLobbies    Lobby[]          @relation("JoinedLobbies")

  createdAt DateTime @default(now())
}

model FriendRequests {
  fromId String
  toId   String

  from User @relation("IncomingRequests", fields: [fromId], references: [id], onDelete: Cascade)
  to   User @relation("OutgoingRequests", fields: [toId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())

  @@id([fromId, toId])
  @@index([fromId])
  @@index([toId])
}

model Game {
  id         String  @id @default(cuid())
  name       String  @unique
  filename   String  @unique
  minPlayers Int
  maxPlayers Int
  lobbies    Lobby[] @relation("GameLobbies")

  createdAt DateTime @default(now())
}

model Lobby {
  id         String  @id @default(cuid())
  gameId     String
  hostId     String
  name       String
  password   String?
  inviteCode String
  capacity   Int

  game  Game   @relation("GameLobbies", fields: [gameId], references: [id], onDelete: Cascade)
  host  User   @relation("HostedLobbies", fields: [hostId], references: [id], onDelete: Cascade)
  users User[] @relation("JoinedLobbies")

  createdAt DateTime @default(now())
  userId    String?

  @@index([gameId])
  @@index([hostId])
}
